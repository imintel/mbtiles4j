/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

repositories {
    mavenLocal()
    maven {
        url = uri('http://repo.maven.apache.org/maven2')
    }
}

dependencies {
    implementation 'org.xerial:sqlite-jdbc:3.8.7'
    implementation 'commons-io:commons-io:2.4'
    testImplementation 'junit:junit:4.11'
}

group = 'ch.poole.geo'
version = '1.2.0'
sourceCompatibility = '1.7'

java {
    withSourcesJar()
    withJavadocJar()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

ext {
    repoUrl = 'https://github.com/simonpoole/mbtiles4j.git'
    spdxId = 'Apache-2.0'
}

publishing {
    publications {
        Release(MavenPublication) {
            from components.java
            groupId group
            artifactId 'mbtiles4j'
            pom {
                name = artifactId
                description = 'A pure-java reader/writer for MBTiles' 
                url = 'https://github.com/simonpoole/mbtiles4j'
                scm {
                    url = repoUrl
                }
                licenses {
                    license {
                        name = spdxId
                        url = 'https://raw.githubusercontent.com/simonpoole/mbtiles4j/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'ckcook'
                        name = 'Cam Cook'
                        url ='http://www.github.com/ccook'
                    }
                    developer {
                        name = 'Simon Poole'
                    }
                }
            }
            repositories {
                maven {
                    name = 'sonatype'
                    credentials {
                        username System.getenv('SONATYPE_USER')
                        password System.getenv('SONATYPE_PASSWORD')
                    }
                    def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                    def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
                    url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                }
            }
        }
    }
}

signing {
    sign publishing.publications.Release
}